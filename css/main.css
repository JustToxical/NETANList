:root {
    --color-background: #1c1b1f; /* dark background */
    --color-on-background: white; /* light text on dark background */
    --color-background-hover: #27262c; /* dark hover */
    --color-on-background-hover: white; /* light text on dark hover */
    --color-primary: #000000; /* dark primary */
    --color-on-primary: white; /* light text on dark primary */
    --color-error: #de0000; /* error color remains the same */
    --color-on-error: white; /* white text on error */
}

main.dark,
header.dark {
    color-scheme: dark;
    --color-background: white; /* light background */
    --color-on-background: black; /* dark text on light background */
    --color-background-hover: #eee; /* light hover */
    --color-on-background-hover: black; /* dark text on light hover */
    --color-primary: #000000; /* light primary */
    --color-primary-disabled: #1f213c; /* dark disabled primary */
    --color-on-primary: black; /* dark text on light primary */
    --color-error: #de0000; /* error color remains the same */
    --color-on-error: white; /* white text on error */
}

html,
body {
    height: 100%;
}

body {
    display: flex;
    flex-direction: column;
    margin: 0;
}

header,
main {
    background-color: var(--color-background);
    color: var(--color-on-background);
    display: grid;
    grid-template-columns: minmax(16rem, 1fr) minmax(16rem, 2fr) minmax(
            16em,
            1fr
        );
    column-gap: 2rem;
}

header {
    display: flex;
    padding-inline: calc(25vw - 10rem);
    height: 4rem;
    background-color: var(--color-primary);
    color: var(--color-on-primary);
}
@media screen and (min-width: 1366px) {
    header {
        display: grid;
        padding-inline: 0;
    }
}
header .logo {
    justify-self: end;
    align-self: center;
    display: flex;
    align-items: flex-end;
    gap: 1rem;
}

header .nav {
    flex: 1;
}

header .nav a {
    color: var(--color-on-primary); /* Ensure links in header are white in light mode */
}

main {
    height: 0;
    flex: 1;
    display: grid;
    grid-template-rows: minmax(0, 1fr);
    column-gap: 2rem;
}

main > div {
    overflow-y: auto;
}

.spinner {
    display: flex;
    align-items: center;
    justify-content: center;
    grid-column: span 3;
}

input[type="checkbox"] {
    height: 1.25rem;
    width: 1.25rem;
    cursor: pointer;
    margin: 0;
}

/* Flip the colors of all SVGs and icons */
svg,
img {
    fill: var(--color-on-background); /* Apply the appropriate color to SVG fill */
    stroke: var(--color-on-background); /* Ensure stroke is also flipped */
}

/* Additional icon styling if needed for different elements */
.icon {
    color: var(--color-on-background);
}

/* Specific styles for the light mode (use this only when light mode is active) */
body:not(.dark) header {
    color: var(--color-on-primary); /* Text in header should be white in light mode */
}

body:not(.dark) svg,
body:not(.dark) .icon {
    fill: var(--color-on-background); /* Flip the SVG fill and icon color to dark */
}
